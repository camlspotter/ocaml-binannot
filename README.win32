       Release notes on the MS Windows ports of Objective Caml
       -------------------------------------------------------

Starting with OCaml 3.01, there are now two ports of Objective Caml
for MS Windows available:
  - a native Win32 port, built with the Microsoft development tools;
  - a port consisting of the Unix sources compiled under the Cygwin
    Unix-like environment for Windows.

The Cygwin port requires only free software, runs faster in bytecode
mode, and provides a more thorough emulation of the Unix library.
It currently lacks the threads library and the ability to interface
with COM components via CamlIDL.  No graphical user interface to the
OCaml toplevel is provided.

The native Win32 port has threads and COM support, but is slower in
bytecode, does not implement some of the functionality of the Unix library, 
and requires MS Visual C++ version 6 for compilation in -custom mode
and in native-code mode.  A simple graphical user interface to the
OCaml toplevel is provided.

The remainder of this document provides more information on both ports.

------------------------------------------------------------------------------

                  The Cygwin port of Objective Caml
                  ---------------------------------

REQUIREMENTS:

This port requires the Cygwin environment from Cygnus/RedHat, which
is freely available at:
          http://sources.redhat.com/cygwin/
Version 1.1 or the upcoming version 1.2 are recommended.

This port runs under all versions of MS Windows supported by Cygwin,
i.e. Windows 95, 98, ME, NT and 2000 on Intel IA32 machines.


INSTALLATION:

The binary distribution is a .tar.gz archive that unpacks in
usr/local/bin and usr/local/lib/ocaml/.  To install, just open
a "bash" windows and type:
         cd /
         tar xvzf /full/path/to/ocaml-X.XX-cygwin.tar.gz

Make sure that /usr/local/bin is in the PATH environment variable.


RECOMPILATION FROM THE SOURCES:

Just follow the instructions for Unix machines given in the file INSTALL.


NOTES:

The libraries available in this port are "num", "str", "unix" and "labltk".
"graph" and "threads" are not available yet.


------------------------------------------------------------------------------

               The native Win32 port of Objective Caml
               ---------------------------------------

REQUIREMENTS:

This port runs under MS Windows 95, 98, ME, NT and 2000 on Intel IA32
machines.  Windows 3.1 and Windows for Workgroups are not
supported. Windows NT on non-Intel processors has not been tested.

The base bytecode system (ocamlc, ocaml, ocamllex, ocamlyacc, ...)
runs without any additional tools.

Statically linking Caml bytecode with C code (ocamlc -custom) requires the
Microsoft Visual C++ compiler version 6.  Dynamic loading of DLLs is
supported out of the box, without additional software.

The native-code compiler (ocamlopt) requires Visual C++ version 6
and the Microsoft assembler MASM version 6.11 or later.
MASM can be downloaded for free from Microsoft's Web site;
see the comp.lang.asm.x86 FAQ for directions, or
http://www.cs.uu.nl/wais/html/na-dir/assembly-language/x86/microsoft.html

The LablTk GUI requires Tcl/Tk 8.3.  Windows binaries are
available from ftp://ftp.scriptics.com/pub/tcl/tcl8_3/.


INSTALLATION:

The binary distribution is a self-installing executable archive.
Just run it and it should install OCaml automatically.

Installing the command-line tools:

  You must add the "bin" subdirectory of the OCaml installation directory
  to the PATH variable, e.g.

          set PATH=%PATH%;D:\lang\ocaml\bin

  Running directly the tools (e.g. typing D:\lang\ocaml\bin\ocamlc)
  will not work if the "bin" subdirectory is not in PATH, because ocamlc
  and the other tools will be unable to find the Caml runtime system
  ocamlrun.exe.

  The command-line tools assume that the standard library resides in
  C:\ocaml\lib. If you have unpacked it elsehwere, define the CAMLLIB
  environment variable to point to the standard library directory, e.g.

          set CAMLLIB=D:\lang\ocaml\lib

  For Windows 95, 98 and ME, the OCaml installer is able to perform the
  corresponding modifications to AUTOEXEC.BAT (define CAMLLIB and
  append to the PATH variable).  For Windows NT and 2000, you'll have to
  edit the environment variables yourself.

  To use the LablTK GUI, the directory where the libraries tk83.lib
  and tcl83.lib were installed (by the Tcl/Tk installer)
  must be added to the library search path in the LIB environment variable.
  E.g. if Tcl/Tk was installed in C:\tcl, add "C:\tcl\lib" to the LIB
  environment variable.


RECOMPILATION FROM THE SOURCES:

The command-line tools can be recompiled from the Unix source
distribution (ocaml-X.YZ.tar.gz), which also contains the files modified
for Windows.

You will need the following software components to perform the recompilation:
- Windows NT or 2000 (the Makefiles do not work under Windows 95, 98, ME
    due to differences between NT and 9x command-line interpreters);
- Visual C++ version 6
- MASM version 6.11 (see above)
- The CygWin port of GNU tools, available from
      http://sourceware.cygnus.com/cygwin/
- TCL/TK version 8.3 (for the LablTK GUI) (see above).

To recompile, first copy manually the files config/m-nt.h and config/s-nt.h
to config/m.h and config/s.h.  Edit config/Makefile.nt as needed.
Then, use "nmake -f Makefile.nt" to build the system, e.g. 

        nmake -f Makefile.nt world
        nmake -f Makefile.nt bootstrap
        nmake -f Makefile.nt opt
        
The sources for the toplevel graphical user interface are not currently
available to the general public.  Contact us if you think you need them.


RANDOM NOTES:

* The VC++ compiler does a poor job on byterun/interp.c. Consequently,
the performance of bytecode programs is about 2/3 of that obtained under
Unix/GCC or Cygwin on similar hardware.

* Libraries available in this port: "num", "str", "threads", "graph",
"labltk", and large parts of "unix". 
"graph" works only under the toplevel application.


CREDITS:

The initial port of Caml Special Light (the ancestor of Objective Caml)
to Windows NT was done by Kevin Gallo at Microsoft Research, who
kindly contributed his changes to the Caml project.

The graphical user interface for the toplevel is due to Jean-Marie
Geffroy at INRIA Rocquencourt.
