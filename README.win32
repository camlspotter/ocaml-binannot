       Release notes on the MS Windows ports of Objective Caml
       -------------------------------------------------------

Starting with OCaml 3.05, there are now no less than three ports of
Objective Caml for MS Windows available:
  - a native Win32 port, built with the Microsoft development tools (non-free);
  - a native Win32 port, built with the MinGW development tools (free);
  - a port consisting of the Unix sources compiled under the Cygwin
    Unix-like environment for Windows (free).

Here is a summary of the main differences between these ports:

				      Native MS	    Native MinGW	Cygwin
Third-party software required
  - for base bytecode system		none		none		none
  - for ocamlc -custom			MSVC		MinGW		Cygwin
  - for native-code generation		MSVC+MASM	MinGW		Cygwin

Speed of bytecode interpreter  		70%		100%		100%

Replay debugger				no		no		yes

The Unix library			partial		partial		full

The Threads library			yes		yes		no

The Graphics library			yes		yes		no


The remainder of this document gives more information on each port.

------------------------------------------------------------------------------

                  The Cygwin port of Objective Caml
                  ---------------------------------

REQUIREMENTS:

This port requires the Cygwin environment from Cygnus/RedHat, which
is freely available at:
          http://sources.redhat.com/cygwin/
Version 1.1 or the upcoming version 1.2 are recommended.

This port runs under all versions of MS Windows supported by Cygwin,
i.e. Windows 95, 98, ME, NT and 2000 on Intel IA32 machines.


INSTALLATION:

For various reasons, no binary distribution of this port is available.
You need to recompile from the source distribution.


RECOMPILATION FROM THE SOURCES:

Just follow the instructions for Unix machines given in the file INSTALL.


NOTES:

The libraries available in this port are "num", "str", "unix" and "labltk".
"graph" and "threads" are not available yet.
The replay debugger is supported.

------------------------------------------------------------------------------

           The native Win32 port built with Microsoft Visual C
           ---------------------------------------------------

REQUIREMENTS:

This port runs under MS Windows 95, 98, ME, NT and 2000 on Intel IA32
machines.  Windows 3.1 and Windows for Workgroups are not
supported. Windows NT on non-Intel processors has not been tested.

The base bytecode system (ocamlc, ocaml, ocamllex, ocamlyacc, ...)
runs without any additional tools.

Statically linking Caml bytecode with C code (ocamlc -custom) requires the
Microsoft Visual C++ compiler version 6.  Dynamic loading of DLLs is
supported out of the box, without additional software.

The native-code compiler (ocamlopt) requires Visual C++ version 6
and the Microsoft assembler MASM version 6.11 or later.
MASM can be downloaded for free from Microsoft's Web site;
see the comp.lang.asm.x86 FAQ for directions, or
http://www2.dgsys.com/~raymoon/faq/masm.html

The LablTk GUI requires Tcl/Tk 8.3.  Windows binaries are
available from ftp://ftp.scriptics.com/pub/tcl/tcl8_3/.


INSTALLATION:

The binary distribution is a self-installing executable archive.
Just run it and it should install OCaml automatically.

Installing the command-line tools:

  You must add the "bin" subdirectory of the OCaml installation directory
  to the PATH variable, e.g.

          set PATH=%PATH%;D:\lang\ocaml\bin

  Running directly the tools (e.g. typing D:\lang\ocaml\bin\ocamlc)
  will not work if the "bin" subdirectory is not in PATH, because ocamlc
  and the other tools will be unable to find the Caml runtime system
  ocamlrun.exe.

  To use the LablTK GUI, the directory where the libraries tk83.lib
  and tcl83.lib were installed (by the Tcl/Tk installer)
  must be added to the library search path in the LIB environment variable.
  E.g. if Tcl/Tk was installed in C:\tcl, add "C:\tcl\lib" to the LIB
  environment variable.


RECOMPILATION FROM THE SOURCES:

The command-line tools can be recompiled from the Unix source
distribution (ocaml-X.YZ.tar.gz), which also contains the files modified
for Windows.

You will need the following software components to perform the recompilation:
- Windows NT, 2000, or XP (we advise against compiling under Windows 95/98/ME)
- Visual C++ version 6
- MASM version 6.11 (see above)
- The CygWin port of GNU tools, available from
      http://sourceware.cygnus.com/cygwin/
- TCL/TK version 8.3 (for the LablTK GUI) (see above).

To recompile, start a Cygwin shell and change to the top-level
directory of the OCaml distribution.  Then, do

	cp config/m-nt.h config/m.h
	cp config/s-nt.h config/s.h
	cp config/Makefile.msvc config/Makefile

Then, edit config/Makefile as needed (see the comments in this file).

Finally, use "make -f Makefile.nt" to build the system, e.g. 

        make -f Makefile.nt world
        make -f Makefile.nt bootstrap
        make -f Makefile.nt opt
        make -f Makefile.nt install


NOTES:

* The VC++ compiler does a poor job on byterun/interp.c. Consequently,
the performance of bytecode programs is about 2/3 of that obtained under
Unix/GCC or Cygwin or Mingw on similar hardware.

* Libraries available in this port: "num", "str", "threads", "graphics",
"labltk", and large parts of "unix". 

* The replay debugger is not supported.

CREDITS:

The initial port of Caml Special Light (the ancestor of Objective Caml)
to Windows NT was done by Kevin Gallo at Microsoft Research, who
kindly contributed his changes to the Caml project.

The graphical user interface for the toplevel is due to Jacob Navia.

------------------------------------------------------------------------------

           The native Win32 port built with Mingw
           --------------------------------------

REQUIREMENTS:

This port runs under MS Windows 95, 98, ME, NT and 2000 on Intel IA32
machines.

The base bytecode system (ocamlc, ocaml, ocamllex, ocamlyacc, ...)
runs without any additional tools.

The native-code compiler (ocamlopt), as well as static linking of
Caml bytecode with C code (ocamlc -custom), require the MinGW
development tools, which is free software available at
	http://www.mingw.org/

The LablTk GUI requires Tcl/Tk 8.0 for MinGW, available from
  ftp://ftp.xraylith.wisc.edu/pub/khan/tcl/tcltk-8.0p2-mingw32.zip


INSTALLATION:

There is no binary distribution yet, so follow the compilation instructions
below.


RECOMPILATION FROM THE SOURCES:

You will need the following software components to perform the recompilation:
- Windows NT, 2000, or XP (we advise against compiling under Windows 95/98/ME)
- MinGW:  http://www.mingw.org/
- Cygwin: http://sourceware.cygnus.com/cygwin/
- Make sure that MinGW binaries occur before Cygwin binaries in the PATH
  (e.g. PATH=/mingw/bin:/usr/bin/:...)
- TCL/TK version 8.0 for MinGW (see above).

Start a Cygwin shell and unpack the source distribution
(ocaml-X.YZ.tar.gz) with "tar xzf".  Change to the top-level
directory of the OCaml distribution.  Then, do

	cp config/m-nt.h config/m.h
	cp config/s-nt.h config/s.h
	cp config/Makefile.mingw config/Makefile

Then, edit config/Makefile as needed (see the comments in this file).

Finally, use "make -f Makefile.nt" to build the system, e.g. 

        make -f Makefile.nt world
        make -f Makefile.nt bootstrap
        make -f Makefile.nt opt
        make -f Makefile.nt opt.opt


NOTES:

* Libraries available in this port: "num", "str", "threads", "graphics",
  "labltk", and large parts of "unix". 

* The replay debugger is not supported.
