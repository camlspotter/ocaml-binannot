### Compile-time configuration

########## General configuration

### Where to install the binaries
BINDIR=/usr/local/bin

### Where to install the standard library
LIBDIR=/usr/local/lib/camlsl

### Where to install the man pages
MANDIR=/usr/local/man/man1
MANEXT=1

### Do #! scripts work on your system?
### Beware: on some systems (e.g. SunOS 4), this will work only if 
### the string "#!$(BINDIR)/cslrun" is less than 32 characters long.
### In doubt, set SHARPBANGSCRIPTS to false.
SHARPBANGSCRIPTS=true
#SHARPBANGSCRIPTS=false

### Make sure that "make" calls "/bin/sh" to execute commands
SHELL=/bin/sh

########## Configuration for the bytecode compiler

### Which C compiler to use for the bytecode interpreter.
### Performance of the bytecode interpreter is *much* improved
### if Gnu CC version 2 is used.
BYTECC=gcc
#BYTECC=cc

### Additional compile-time options for $(BYTECC).
# If using gcc on Intel 386 or Motorola 68k:
# (the -fno-defer-pop option circumvents a gcc bug)
#BYTECCCOMPOPTS=-fno-defer-pop -Wall
# If using gcc and being superstitious:
BYTECCCOMPOPTS=-Wall
# Otherwise:
#BYTECCCOMPOPTS=

### Additional link-time options for $(BYTECC)
BYTECCLINKOPTS=

### If using GCC on a Dec Alpha under OSF1:
LOWADDRESSES=-Xlinker -taso
# Otherwise:
#LOWADDRESSES=

### Libraries needed
# On most platforms:
CCLIBS=$(TERMCAPLIBS) -lm
# For Solaris 2:
#CCLIBS=$(TERMCAPLIBS) -lnsl -lsocket -lm

### How to invoke ranlib
# BSD-style:
RANLIB=ranlib
# System V-style:
#RANLIB=ar -rs
# If ranlib is not needed at all:
#RANLIB=true

############# Configuration for the native-code compiler

### Name of architecture for the native-code compiler
### Currently supported:
###
### alpha       DecStation 3000 under OSF1
### sparc       Sun Sparcstation under SunOS 4.1 or Solaris 2
### i386        Intel 386 / 486 / Pentium PCs under Linux or NextStep
### mips        DecStation 3100 and 5000 under Ultrix 4
###
### Set ARCH=none if your machine is not supported
ARCH=alpha
#ARCH=sparc
#ARCH=i386
#ARCH=mips
#ARCH=none

### Name of operating system family for the native-code compiler
### Currently needed only if ARCH=sparc to distinguish between
### SunOS and Solaris.
### Set SYSTEM=unknown in all other cases.
#SYSTEM=sunos
#SYSTEM=solaris
SYSTEM=unknown

### Which C compiler to use for the native-code compiler.
### cc is better than gcc on the Mips and Alpha.
NATIVECC=cc
#NATIVECC=gcc

### Additional compile-time options for $(NATIVECC).
# For cc on the Alpha:
NATIVECCCOMPOPTS=-std1
# For cc on the Mips:
#NATIVECCCOMPOPTS=-std
# For gcc if superstitious:
#NATIVECCCOMPOPTS=-Wall

### Additional link-time options for $(NATIVECC)
# For the i386 running under NextStep:
#NATIVECCLINKOPTS=-Xlinker -preload
# Otherwise:
NATIVECCLINKOPTS=

### Flags for the assembler
# For the Alpha or the Mips:
ASFLAGS=-O2
# For the Sparc:
#ASFLAGS=-P -DSYS_$(SYSTEM)
# Otherwise:
#ASFLAGS=
