open Lib;;
Gc.compact ();;
let _ = Pervasives.do_at_exit();;

(**
0	CONSTINT 42
2	PUSHACC0 
3	MAKEBLOCK1 0
5	POP 1
7	SETGLOBAL Lib
9	BRANCH 751
11	RESTART 
12	GRAB 1
14	ACC0 
15	BRANCHIFNOT 28
17	ACC1 
18	PUSHACC1 
19	GETFIELD1 
20	PUSHOFFSETCLOSURE0 
21	APPLY2 
22	PUSHACC1 
23	GETFIELD0 
24	MAKEBLOCK2 0
26	RETURN 2
28	ACC1 
29	RETURN 2
31	RESTART 
32	GRAB 3
34	CONST0 
35	PUSHACC4 
36	LEINT 
37	BRANCHIFNOT 42
39	CONST0 
40	RETURN 4
42	ACC3 
43	PUSHACC3 
44	PUSHACC3 
45	PUSHACC3 
46	C_CALL4 caml_input
48	PUSHCONST0 
49	PUSHACC1 
50	EQ 
51	BRANCHIFNOT 58
53	GETGLOBAL End_of_file
55	MAKEBLOCK1 0
57	RAISE 
58	ACC0 
59	PUSHACC5 
60	SUBINT 
61	PUSHACC1 
62	PUSHACC5 
63	ADDINT 
64	PUSHACC4 
65	PUSHACC4 
66	PUSHOFFSETCLOSURE0 
67	APPTERM 4, 9
70	ACC0 
71	C_CALL1 caml_input_scan_line
73	PUSHCONST0 
74	PUSHACC1 
75	EQ 
76	BRANCHIFNOT 83
78	GETGLOBAL End_of_file
80	MAKEBLOCK1 0
82	RAISE 
83	CONST0 
84	PUSHACC1 
85	GTINT 
86	BRANCHIFNOT 107
88	ACC0 
89	OFFSETINT -1
91	C_CALL1 create_string
93	PUSHACC1 
94	OFFSETINT -1
96	PUSHCONST0 
97	PUSHACC2 
98	PUSHACC5 
99	C_CALL4 caml_input
101	ACC2 
102	C_CALL1 caml_input_char
104	ACC0 
105	RETURN 3
107	ACC0 
108	NEGINT 
109	C_CALL1 create_string
111	PUSHACC1 
112	NEGINT 
113	PUSHCONST0 
114	PUSHACC2 
115	PUSHACC5 
116	C_CALL4 caml_input
118	CONST0 
119	PUSHTRAP 130
121	ACC6 
122	PUSHOFFSETCLOSURE0 
123	APPLY1 
124	PUSHACC5 
125	PUSHENVACC1 
126	APPLY2 
127	POPTRAP 
128	RETURN 3
130	PUSHGETGLOBAL End_of_file
132	PUSHACC1 
133	GETFIELD0 
134	EQ 
135	BRANCHIFNOT 140
137	ACC1 
138	RETURN 4
140	ACC0 
141	RAISE 
142	ACC0 
143	C_CALL1 caml_flush
145	RETURN 1
147	ACC0 
148	C_CALL1 caml_flush
150	RETURN 1
152	RESTART 
153	GRAB 1
155	ACC1 
156	PUSHACC1 
157	C_CALL2 caml_output_char
159	RETURN 2
161	RESTART 
162	GRAB 1
164	ACC1 
165	PUSHACC1 
166	C_CALL2 caml_output_char
168	RETURN 2
170	RESTART 
171	GRAB 1
173	ACC1 
174	PUSHACC1 
175	C_CALL2 caml_output_int
177	RETURN 2
179	RESTART 
180	GRAB 1
182	ACC1 
183	PUSHACC1 
184	C_CALL2 caml_seek_out
186	RETURN 2
188	ACC0 
189	C_CALL1 caml_pos_out
191	RETURN 1
193	ACC0 
194	C_CALL1 caml_channel_size
196	RETURN 1
198	RESTART 
199	GRAB 1
201	ACC1 
202	PUSHACC1 
203	C_CALL2 caml_set_binary_mode
205	RETURN 2
207	ACC0 
208	C_CALL1 caml_input_char
210	RETURN 1
212	ACC0 
213	C_CALL1 caml_input_char
215	RETURN 1
217	ACC0 
218	C_CALL1 caml_input_int
220	RETURN 1
222	ACC0 
223	C_CALL1 input_value
225	RETURN 1
227	RESTART 
228	GRAB 1
230	ACC1 
231	PUSHACC1 
232	C_CALL2 caml_seek_in
234	RETURN 2
236	ACC0 
237	C_CALL1 caml_pos_in
239	RETURN 1
241	ACC0 
242	C_CALL1 caml_channel_size
244	RETURN 1
246	ACC0 
247	C_CALL1 caml_close_channel
249	RETURN 1
251	RESTART 
252	GRAB 1
254	ACC1 
255	PUSHACC1 
256	C_CALL2 caml_set_binary_mode
258	RETURN 2
260	CONST0 
261	PUSHENVACC1 
262	APPLY1 
263	ACC0 
264	C_CALL1 sys_exit
266	RETURN 1
268	CONST0 
269	PUSHENVACC1 
270	GETFIELD0 
271	APPTERM1 2
273	CONST0 
274	PUSHENVACC1 
275	APPLY1 
276	CONST0 
277	PUSHENVACC2 
278	APPTERM1 2
280	ENVACC1 
281	GETFIELD0 
282	PUSHACC0 
283	PUSHACC2 
284	CLOSURE 2, 273
287	PUSHENVACC1 
288	SETFIELD0 
289	RETURN 2
291	ENVACC1 
292	C_CALL1 caml_flush
294	ENVACC2 
295	C_CALL1 caml_flush
297	RETURN 1
299	CONST0 
300	PUSHENVACC1 
301	APPLY1 
302	C_CALL1 float_of_string
304	RETURN 1
306	CONST0 
307	PUSHENVACC1 
308	APPLY1 
309	C_CALL1 int_of_string
311	RETURN 1
313	ENVACC2 
314	C_CALL1 caml_flush
316	ENVACC1 
317	PUSHENVACC3 
318	APPTERM1 2
320	CONSTINT 13
322	PUSHENVACC1 
323	C_CALL2 caml_output_char
325	ENVACC1 
326	C_CALL1 caml_flush
328	RETURN 1
330	ACC0 
331	PUSHENVACC1 
332	PUSHENVACC2 
333	APPLY2 
334	CONSTINT 13
336	PUSHENVACC1 
337	C_CALL2 caml_output_char
339	ENVACC1 
340	C_CALL1 caml_flush
342	RETURN 1
344	ACC0 
345	PUSHENVACC1 
346	APPLY1 
347	PUSHENVACC2 
348	PUSHENVACC3 
349	APPTERM2 3
351	ACC0 
352	PUSHENVACC1 
353	APPLY1 
354	PUSHENVACC2 
355	PUSHENVACC3 
356	APPTERM2 3
358	ACC0 
359	PUSHENVACC1 
360	PUSHENVACC2 
361	APPTERM2 3
363	ACC0 
364	PUSHENVACC1 
365	C_CALL2 caml_output_char
367	RETURN 1
369	CONSTINT 13
371	PUSHENVACC1 
372	C_CALL2 caml_output_char
374	ENVACC1 
375	C_CALL1 caml_flush
377	RETURN 1
379	ACC0 
380	PUSHENVACC1 
381	PUSHENVACC2 
382	APPLY2 
383	CONSTINT 13
385	PUSHENVACC1 
386	C_CALL2 caml_output_char
388	RETURN 1
390	ACC0 
391	PUSHENVACC1 
392	APPLY1 
393	PUSHENVACC2 
394	PUSHENVACC3 
395	APPTERM2 3
397	ACC0 
398	PUSHENVACC1 
399	APPLY1 
400	PUSHENVACC2 
401	PUSHENVACC3 
402	APPTERM2 3
404	ACC0 
405	PUSHENVACC1 
406	PUSHENVACC2 
407	APPTERM2 3
409	ACC0 
410	PUSHENVACC1 
411	C_CALL2 caml_output_char
413	RETURN 1
415	RESTART 
416	GRAB 3
418	CONST0 
419	PUSHACC3 
420	LTINT 
421	BRANCHIF 432
423	ACC1 
424	C_CALL1 ml_string_length
426	PUSHACC4 
427	PUSHACC4 
428	ADDINT 
429	GTINT 
430	BRANCHIFNOT 437
432	GETGLOBAL "really_input"
434	PUSHENVACC1 
435	APPTERM1 5
437	ACC3 
438	PUSHACC3 
439	PUSHACC3 
440	PUSHACC3 
441	PUSHENVACC2 
442	APPTERM 4, 8
445	RESTART 
446	GRAB 3
448	CONST0 
449	PUSHACC3 
450	LTINT 
451	BRANCHIF 462
453	ACC1 
454	C_CALL1 ml_string_length
456	PUSHACC4 
457	PUSHACC4 
458	ADDINT 
459	GTINT 
460	BRANCHIFNOT 467
462	GETGLOBAL "input"
464	PUSHENVACC1 
465	APPTERM1 5
467	ACC3 
468	PUSHACC3 
469	PUSHACC3 
470	PUSHACC3 
471	C_CALL4 caml_input
473	RETURN 4
475	ACC0 
476	PUSHCONST0 
477	PUSHGETGLOBAL <0>(0, <0>(6, 0))
479	PUSHENVACC1 
480	APPTERM3 4
482	ACC0 
483	PUSHCONST0 
484	PUSHGETGLOBAL <0>(0, <0>(7, 0))
486	PUSHENVACC1 
487	APPTERM3 4
489	RESTART 
490	GRAB 2
492	ACC1 
493	PUSHACC1 
494	PUSHACC4 
495	C_CALL3 sys_open
497	C_CALL1 caml_open_descriptor
499	RETURN 3
501	ACC0 
502	C_CALL1 caml_flush
504	ACC0 
505	C_CALL1 caml_close_channel
507	RETURN 1
509	RESTART 
510	GRAB 1
512	CONST0 
513	PUSHACC2 
514	PUSHACC2 
515	C_CALL3 output_value
517	RETURN 2
519	RESTART 
520	GRAB 3
522	CONST0 
523	PUSHACC3 
524	LTINT 
525	BRANCHIF 536
527	ACC1 
528	C_CALL1 ml_string_length
530	PUSHACC4 
531	PUSHACC4 
532	ADDINT 
533	GTINT 
534	BRANCHIFNOT 541
536	GETGLOBAL "output"
538	PUSHENVACC1 
539	APPTERM1 5
541	ACC3 
542	PUSHACC3 
543	PUSHACC3 
544	PUSHACC3 
545	C_CALL4 caml_output
547	RETURN 4
549	RESTART 
550	GRAB 1
552	ACC1 
553	C_CALL1 ml_string_length
555	PUSHCONST0 
556	PUSHACC3 
557	PUSHACC3 
558	C_CALL4 caml_output
560	RETURN 2
562	ACC0 
563	PUSHCONSTINT 438
565	PUSHGETGLOBAL <0>(1, <0>(3, <0>(4, <0>(6, 0))))
567	PUSHENVACC1 
568	APPTERM3 4
570	ACC0 
571	PUSHCONSTINT 438
573	PUSHGETGLOBAL <0>(1, <0>(3, <0>(4, <0>(7, 0))))
575	PUSHENVACC1 
576	APPTERM3 4
578	RESTART 
579	GRAB 2
581	ACC1 
582	PUSHACC1 
583	PUSHACC4 
584	C_CALL3 sys_open
586	C_CALL1 caml_open_descriptor
588	RETURN 3
590	ACC0 
591	PUSHGETGLOBAL "%.12g"
593	C_CALL2 format_float
595	RETURN 1
597	ACC0 
598	PUSHGETGLOBAL "%d"
600	C_CALL2 format_int
602	RETURN 1
604	GETGLOBAL "true"
606	PUSHACC1 
607	C_CALL2 string_equal
609	BRANCHIFNOT 614
611	CONST1 
612	RETURN 1
614	GETGLOBAL "false"
616	PUSHACC1 
617	C_CALL2 string_equal
619	BRANCHIFNOT 624
621	CONST0 
622	RETURN 1
624	GETGLOBAL "bool_of_string"
626	PUSHENVACC1 
627	APPTERM1 2
629	ACC0 
630	BRANCHIFNOT 636
632	GETGLOBAL "true"
634	RETURN 1
636	GETGLOBAL "false"
638	RETURN 1
640	CONST0 
641	PUSHACC1 
642	LTINT 
643	BRANCHIF 651
645	CONSTINT 255
647	PUSHACC1 
648	GTINT 
649	BRANCHIFNOT 656
651	GETGLOBAL "char_of_int"
653	PUSHENVACC1 
654	APPTERM1 2
656	ACC0 
657	RETURN 1
659	RESTART 
660	GRAB 1
662	ACC0 
663	C_CALL1 ml_string_length
665	PUSHACC2 
666	C_CALL1 ml_string_length
668	PUSHACC0 
669	PUSHACC2 
670	ADDINT 
671	C_CALL1 create_string
673	PUSHACC2 
674	PUSHCONST0 
675	PUSHACC2 
676	PUSHCONST0 
677	PUSHACC7 
678	C_CALL5 blit_string
680	ACC1 
681	PUSHACC3 
682	PUSHACC2 
683	PUSHCONST0 
684	PUSHACC 8
686	C_CALL5 blit_string
688	ACC0 
689	RETURN 5
691	CONSTINT -1
693	PUSHACC1 
694	XORINT 
695	RETURN 1
697	CONST0 
698	PUSHACC1 
699	GEINT 
700	BRANCHIFNOT 705
702	ACC0 
703	RETURN 1
705	ACC0 
706	NEGINT 
707	RETURN 1
709	RESTART 
710	GRAB 1
712	ACC1 
713	PUSHACC1 
714	C_CALL2 greaterequal
716	BRANCHIFNOT 721
718	ACC0 
719	RETURN 2
721	ACC1 
722	RETURN 2
724	RESTART 
725	GRAB 1
727	ACC1 
728	PUSHACC1 
729	C_CALL2 lessequal
731	BRANCHIFNOT 736
733	ACC0 
734	RETURN 2
736	ACC1 
737	RETURN 2
739	ACC0 
740	PUSHGETGLOBAL Invalid_argument
742	MAKEBLOCK2 0
744	RAISE 
745	ACC0 
746	PUSHGETGLOBAL Failure
748	MAKEBLOCK2 0
750	RAISE 
751	CLOSURE 0, 745
754	PUSH 
755	CLOSURE 0, 739
758	PUSHGETGLOBAL "Pervasives.Exit"
760	MAKEBLOCK1 0
762	PUSHGETGLOBAL "Pervasives.Assert_failure"
764	MAKEBLOCK1 0
766	PUSH 
767	CLOSURE 0, 725
770	PUSH 
771	CLOSURE 0, 710
774	PUSH 
775	CLOSURE 0, 697
778	PUSH 
779	CLOSURE 0, 691
782	PUSHCONST0 
783	PUSHCONSTINT 31
785	PUSHCONST1 
786	LSLINT 
787	EQ 
788	BRANCHIFNOT 794
790	CONSTINT 30
792	BRANCH 796
794	CONSTINT 62
796	PUSHCONST1 
797	LSLINT 
798	PUSHACC0 
799	OFFSETINT -1
801	PUSH 
802	CLOSURE 0, 660
805	PUSHACC 9
807	CLOSURE 1, 640
810	PUSH 
811	CLOSURE 0, 629
814	PUSHACC 11
816	CLOSURE 1, 604
819	PUSH 
820	CLOSURE 0, 597
823	PUSH 
824	CLOSURE 0, 590
827	PUSH 
828	CLOSUREREC 0, 12
832	CONST0 
833	C_CALL1 caml_open_descriptor
835	PUSHCONST1 
836	C_CALL1 caml_open_descriptor
838	PUSHCONST2 
839	C_CALL1 caml_open_descriptor
841	PUSH 
842	CLOSURE 0, 579
845	PUSHACC0 
846	CLOSURE 1, 570
849	PUSHACC1 
850	CLOSURE 1, 562
853	PUSH 
854	CLOSURE 0, 550
857	PUSHACC 22
859	CLOSURE 1, 520
862	PUSH 
863	CLOSURE 0, 510
866	PUSH 
867	CLOSURE 0, 501
870	PUSH 
871	CLOSURE 0, 490
874	PUSHACC0 
875	CLOSURE 1, 482
878	PUSHACC1 
879	CLOSURE 1, 475
882	PUSHACC 28
884	CLOSURE 1, 446
887	PUSH 
888	CLOSUREREC 0, 32
892	ACC0 
893	PUSHACC 31
895	CLOSURE 2, 416
898	PUSHACC 22
900	CLOSUREREC 1, 70
904	ACC 15
906	CLOSURE 1, 409
909	PUSHACC 11
911	PUSHACC 17
913	CLOSURE 2, 404
916	PUSHACC 12
918	PUSHACC 18
920	PUSHACC 23
922	CLOSURE 3, 397
925	PUSHACC 13
927	PUSHACC 19
929	PUSHACC 23
931	CLOSURE 3, 390
934	PUSHACC 14
936	PUSHACC 20
938	CLOSURE 2, 379
941	PUSHACC 20
943	CLOSURE 1, 369
946	PUSHACC 20
948	CLOSURE 1, 363
951	PUSHACC 17
953	PUSHACC 22
955	CLOSURE 2, 358
958	PUSHACC 18
960	PUSHACC 23
962	PUSHACC 29
964	CLOSURE 3, 351
967	PUSHACC 19
969	PUSHACC 24
971	PUSHACC 29
973	CLOSURE 3, 344
976	PUSHACC 20
978	PUSHACC 25
980	CLOSURE 2, 330
983	PUSHACC 25
985	CLOSURE 1, 320
988	PUSHACC 12
990	PUSHACC 28
992	PUSHACC 30
994	CLOSURE 3, 313
997	PUSHACC0 
998	CLOSURE 1, 306
1001	PUSHACC1 
1002	CLOSURE 1, 299
1005	PUSHACC 29
1007	PUSHACC 31
1009	CLOSURE 2, 291
1012	MAKEBLOCK1 0
1014	PUSHACC0 
1015	CLOSURE 1, 280
1018	PUSHACC1 
1019	CLOSURE 1, 268
1022	PUSHACC0 
1023	CLOSURE 1, 260
1026	PUSHACC1 
1027	PUSHACC 22
1029	PUSHACC4 
1030	PUSHACC3 
1031	PUSH 
1032	CLOSURE 0, 252
1035	PUSH 
1036	CLOSURE 0, 246
1039	PUSH 
1040	CLOSURE 0, 241
1043	PUSH 
1044	CLOSURE 0, 236
1047	PUSH 
1048	CLOSURE 0, 228
1051	PUSH 
1052	CLOSURE 0, 222
1055	PUSH 
1056	CLOSURE 0, 217
1059	PUSH 
1060	CLOSURE 0, 212
1063	PUSHACC 32
1065	PUSHACC 35
1067	PUSHACC 33
1069	PUSH 
1070	CLOSURE 0, 207
1073	PUSHACC 41
1075	PUSHACC 40
1077	PUSHACC 42
1079	PUSH 
1080	CLOSURE 0, 199
1083	PUSHACC 46
1085	PUSH 
1086	CLOSURE 0, 193
1089	PUSH 
1090	CLOSURE 0, 188
1093	PUSH 
1094	CLOSURE 0, 180
1097	PUSHACC 51
1099	PUSH 
1100	CLOSURE 0, 171
1103	PUSH 
1104	CLOSURE 0, 162
1107	PUSHACC 55
1109	PUSHACC 57
1111	PUSH 
1112	CLOSURE 0, 153
1115	PUSH 
1116	CLOSURE 0, 147
1119	PUSH 
1120	CLOSURE 0, 142
1123	PUSHACC 64
1125	PUSHACC 63
1127	PUSHACC 65
1129	PUSHACC 39
1131	PUSHACC 41
1133	PUSHACC 43
1135	PUSHACC 45
1137	PUSHACC 47
1139	PUSHACC 49
1141	PUSHACC 51
1143	PUSHACC 53
1145	PUSHACC 55
1147	PUSHACC 57
1149	PUSHACC 59
1151	PUSHACC 61
1153	PUSHACC 63
1155	PUSHACC 65
1157	PUSHACC 67
1159	PUSHACC 83
1161	PUSHACC 85
1163	PUSHACC 87
1165	PUSHACC 89
1167	PUSHACC 91
1169	PUSHACC 93
1171	PUSHACC 95
1173	PUSHACC 97
1175	PUSHACC 99
1177	PUSHACC 101
1179	PUSHACC 105
1181	PUSHACC 105
1183	PUSHACC 105
1185	PUSHACC 109
1187	PUSHACC 111
1189	PUSHACC 113
1191	PUSHACC 118
1193	PUSHACC 118
1195	PUSHACC 118
1197	PUSHACC 118
1199	MAKEBLOCK 70, 0
1202	POP 53
1204	SETGLOBAL Pervasives
1206	CONST0 
1207	C_CALL1 gc_compaction
1209	CONST0 
1210	PUSHGETGLOBALFIELD Pervasives, 69
1213	APPLY1 
1214	ATOM0 
1215	SETGLOBAL T330-compact-2
1217	STOP 
**)
