# Makefile for the "num" (exact rational arithmetic) library

# Compilation options
C = sc
COptions = -model far -i :bignum:h:,:::byterun:
CAMLC = :::boot:ocamlrun :::boot:ocamlc -I :::stdlib:
CAMLOPT = :::boot:ocamlrun :::ocamlopt: -I :::stdlib:

PPCC = mrc
PPCCOptions = -i :bignum:h:,:::byterun: -w 35

CAMLOBJS = int_misc.cmo string_misc.cmo nat.cmo big_int.cmo arith_flags.cmo ¶
  ratio.cmo num.cmo arith_status.cmo

CMIFILES = big_int.cmi nat.cmi num.cmi ratio.cmi arith_status.cmi

COBJS = nat_stubs.c.o
PPCCOBJS = nat_stubs.c.x

all Ä libnums.o libnums.x nums.cma {CMIFILES}

nums.cma Ä {CAMLOBJS}
	{CAMLC} -a -o nums.cma {CAMLOBJS}

libnums.o Ä :bignum:libbignum.o {COBJS}
	lib -o libnums.o :bignum:libbignum.o {COBJS}

libnums.x Ä :bignum:libbignum.x {PPCCOBJS}
	ppclink -xm library -o libnums.x :bignum:libbignum.x {PPCCOBJS}

:bignum:libbignum.x Ä :bignum:libbignum.o
	echo -n

:bignum:libbignum.o Ä
	directory :bignum; domake C; directory ::

install Ä
	duplicate -y libnums.o libnums.x nums.cma {CMIFILES} "{LIBDIR}"

clean Ä
	delete -i Å.cm[aio] || set status 0

realclean Ä clean
	delete -i Å.[ox] || set status 0
	directory :bignum; domake scratch; directory ::
	directory :test; domake clean; directory ::

.cmi Ä .mli
	{CAMLC} -c {COMPFLAGS} {default}.mli

.cmo Ä .ml
	{CAMLC} -c {COMPFLAGS} {default}.ml

nat_stubs.c.o Ä nat.h

depend Ä
	MakeDepend Å.c > Makefile.Mac.depend
	:::boot:ocamlrun :::tools:ocamldep Å.mli Å.ml >> Makefile.Mac.depend
