!include ..\support\Makefile.common.nt

LABLTKLIB=-I ../lib -I ../support
OTHERSLIB=-I $(OTHERS)/win32unix -I $(OTHERS)/str -I $(OTHERS)/systhreads
OCAMLTOPLIB=-I $(TOPDIR)/parsing -I $(TOPDIR)/utils -I $(TOPDIR)/typing
INCLUDES=$(OTHERSLIB) $(LABLTKLIB) $(OCAMLTOPLIB)
CCFLAGS=-I..\..\..\byterun /Zi $(TK_DEFS)

OBJ =	list2.cmo	useunix.cmo	setpath.cmo	lexical.cmo	\
	fileselect.cmo	searchid.cmo	searchpos.cmo	shell.cmo	\
        help.cmo        \
	viewer.cmo	typecheck.cmo	editor.cmo	main.cmo

JG =	jg_tk.cmo	jg_config.cmo	jg_bind.cmo	 jg_completion.cmo \
	jg_box.cmo \
	jg_button.cmo	jg_toplevel.cmo	jg_text.cmo	jg_message.cmo \
	jg_menu.cmo	jg_entry.cmo	jg_multibox.cmo	jg_memo.cmo

# Default rules

.SUFFIXES: .ml .mli .cmo .cmi .cmx

.ml.cmo:
	$(LABLCOMP) $(INCLUDES) $<

.mli.cmi:
	$(LABLCOMP) $(INCLUDES) $<

.c.obj:
	$(BYTECC) $(BYTECCCOMPOPTS) $(CCFLAGS) -c $<

all: ocamlbrowser

ocamlbrowser: $(TOPDIR)/toplevel/toplevellib.cma jglib.cma $(OBJ) winmain.obj
	$(LABLC) -o ocamlbrowser -custom $(INCLUDES) \
		$(TOPDIR)/toplevel/toplevellib.cma \
		unix.cma threads.cma str.cma labltk.cma jglib.cma $(OBJ) \
		$(TK_LINK) winmain.obj

jglib.cma: $(JG)
	$(LABLCOMP) -a -o jglib.cma $(JG) 

install:
	if exist ocamlbrowser.exe cp ocamlbrowser.exe $(BINDIR)

clean:
	rm -f *.cm? ocamlbrowser dummy.mli *~ *.orig

depend:
	$(LABLDEP) *.ml *.mli > .depend

dummy.mli:
	cp dummyWin.mli dummy.mli
shell.cmo: dummy.cmi

!include	.depend
