#########################################################################
#                                                                       #
#                            Objective Caml                             #
#                                                                       #
#          Damien Doligez, projet Moscova, INRIA Rocquencourt           #
#                                                                       #
#   Copyright 1999 Institut National de Recherche en Informatique et    #
#   en Automatique.  All rights reserved.  This file is distributed     #
#   under the terms of the GNU Library General Public License.          #
#                                                                       #
#########################################################################

# $Id$

# systhread library
# not supported yet: too many bugs in GUSI and in posix.c.

C = sc
COptions = -includes unix -i ":::byterun:,:::config:,{GUSI}include:" -w 35 ¶
           {cdbgflag} -model far

PPCC = mrc
PPCCOptions = -includes unix -i ":::byterun:,:::config:,{GUSI}include:" -w 35 ¶
              {cdbgflag}

CAMLC = :::boot:ocamlrun :::ocamlc -I :::stdlib: -I ::unix:

C_OBJS = posix.c.o
PPCC_OBJS = posix.c.x

THREAD_OBJS = thread.cmo mutex.cmo condition.cmo event.cmo threadUnix.cmo
THREAD_INTF = thread.cmi mutex.cmi condition.cmi event.cmi threadUnix.cmi

GENFILES = thread.ml

all Ä libthreads.x libthreads.o threads.cma

libthreads.x Ä {PPCC_OBJS}
    ppclink {ldbgflag} -xm library -o libthreads.x {PPCC_OBJS}

libthreads.o Ä {C_OBJS}
    lib {ldbgflag} -o libthreads.o {C_OBJS}

threads.cma Ä {THREAD_OBJS}
    {CAMLC} -a -o threads.cma -custom {THREAD_OBJS}

thread.ml Ä thread_posix.ml
    duplicate -y thread_posix.ml thread.ml

partialclean Ä
    delete -i Å.cmÅ || set status 0

clean Ä partialclean
    delete -i Å.[ox] || set status 0
    delete -i {GENFILES}

install Ä
    duplicate -y libthreads.x libthreads.o "{LIBDIR}"
    if "`exists "{LIBDIR}threads"`" == ""
      newfolder "{LIBDIR}threads"
    end
    duplicate -y {THREAD_INTF} threads.cma "{LIBDIR}threads"
    duplicate -y thread.mli mutex.mli condition.mli event.mli threadUnix.mli ¶
              "{LIBDIR}"

.cmi Ä .mli
    {CAMLC} -c {COMPFLAGS} {depdir}{default}.mli

.cmo Ä .ml
    {CAMLC} -c {COMPFLAGS} {depdir}{default}.ml

depend Ä {GENFILES}
    begin
      MakeDepend -w -objext .x Å.c
      MakeDepend -w Å.c
      :::boot:ocamlrun :::tools:ocamldep -I :::stdlib: -I ::unix: Å.mli Å.ml
    end | streamedit -e "/¶t/ replace // ' ' -c °" > Makefile.Mac.depend
