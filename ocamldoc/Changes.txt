Current :
OK - fix: when generating separated files in latex, generate them in
     the same directory than the main file, (the one specified by -o)
OK - mod: one section per to module in latex output + improve latex output
OK - mod: odoc_latex: use buffers instead of string concatenation
OK - add: new ocamldoc man page, thanks to Samuel Mimram
OK - fix: useless parenthesis around agruments of arguments of a type constructor in
     type definitions, and aournd arguments of exceptions in exception definitions.
OK - fix: blank lines in verbatim, latex, code pre, code and ele ref modes
     are now accepted
OK - fix: html generator: included module names were displayed with their simple
     name rather than their fully qualified name
OK - fix: use a formatter from a buffer rather Format.str_formatter in
     Odoc_mist.sting_of_module_type, to avoid too much blanks
OK - new module odoc_print, will work when Format.pp_print_flush is fixed
OK - odoc_html: use buffers instead of string concatenation
OK - odoc_man: use buffers instead of string concatenation
OK - odoc_cross.ml: use hash tables modified on the fly to resolve 
    (module | module type | exception) name aliases
OK - odoc_html: replace some calls to Str. by specific functions on strings
OK - odoc_cross.ml: use a Map to associate a complete name to
    the known elements with this name, instead of searching each time
    through the whole list of modules -> a gain of more than 90% in speed
    for cross-referecing (Odoc_cross.associate)
OK - fix: Odoc_name.cut printed a '(' instead of a '.' OK - add: new option -customdir
OK - add: new option -i (to add a path to the directory where 
     to look for custom generators)
OK - add: add odoc_config.ml{,i}
OK - add: keep_code in Odoc_info.Args interface
OK - add: m_code_intf and m_code fields for modules, fit when the
   Odoc_args.keep_code option is set, and fit for all modules, not
   only toplevel ones
OK - fix: bug preventing to get the code in a .mli
OK - fix: missing spaces after carriage return in types (Odoc_misc.string_of_type_expr)
OK - fixes: some bugs in the text parser 
     ( ]} meaning end of code and somehting else instead of end of precode)
OK - add: in Odoc_info: text_of_string, text_string_of_text, info_of_string
OK - fix: better output of titles in html (use more the style)
OK - add: -intro option to use a file content as ocamldoc comment to use as
OK   introduction for LaTeX document and HTML index page
OK - add: the HTML generator generates the code of the module if available
OK - add: field m_code for modules, to keep the code of top modules
OK - fix: display "include Foo" instead of "include module Foo" in Latex, Man, Texi
OK - fix: not display comments associated to include directives
OK - fix: bad display of type parameters for class and class types

TODO:
 - need to fix display of type parameters for inherited classes/class types
OK - add the kind to module parameters (the way the parameter was build in the parsetree)
 - generate html from module_kind rather than from module_type
   + pareil pour les classes et class types 
OK + utilisation de blocs div pour indenter
 - latex: style latex pour indenter dans les module kind


======

Release 3.05 :
 - added link tags in html header to reference sections and subsections
   in each page (for browser which handle those tags)
 - no titles nor lists in first sentence of text in indexes and latex titles
 - only one table for the titles in HTML output
 - fix of bad comment association for types in .ml files
 - dumps now contain a magic number, checked when dumps are loaded
 - new option -o to use with texi, latex and dot generators
 - new .code CSS class used
 - better output for classes and modules, with their type
 - added texinfo generator, by Olivier Andrieu
 - removed iso generator, which became the odoc_check custom generator
 - link syntax {{:url}text} added to the manual
 - (** comments in code is colorized in ocaml code html pages
 - new class .code in style
 - new generator : -dot . Output dot code to display
   modules or types dependencies.
 - new option -inv-merge-ml-mli to inverse the priority of
   .ml and .mli when merging
 - option -werr becomes -warn-error
 - possibility to define and reference section labels
   Exemple:
    (** {2:mysectionlabel My title bla bla bla} *)
   in module Foo

   This section is referenced with {!Foo.mysectionlabel} in
   a comment.

Pre-release 4 :
 - new option -werr to treat ocamldoc warnings as errors
 - new option -hide to remove some modules from complete names,
   (e.g., print ref instead of Pervasives.ref)
 - HTML doc in classic style only contain indexes to existing element kinds
   (i.e. there is no class index if the doc does not contain any class.)
 - First description sentence now stops at the first period followed by a blank,
   or at the first blank line.
 - update of user manual
 - check report generator added (options -iso and -iso-{val|ty|cl|ex|mod})
 - Odoc_info.Scan.scanner base class added
 - support for custom tags (@xxx with xxx not a predefined tag), see manual
 - new classes info in Odoc_html, Odoc_to_text, Odoc_latex, and Odoc_man, which
   contains the functions for printing info structures
 - replacement of modules Odoc_html.Text and Odoc_latex.Text by
   classes Odoc_html.text and Odoc_latex.text to allow the redefinition
   of their methods in custom generators
 - bug fix : a shortcut list can be pu after a blank line
 - improved display of variant constructors, record fields and
   their comments in classic HTML
 - blank lines in comments become <p> in HTML instead of <br>
 - bug fix : there can be blanks between the last item 
   and the ending } of a list
 - new option -latextitles
 - number of errors encountered is displayed 
 - if at least one error occurs, exit code is not 0
 - more precise error messages
 - bug fix : \n and other blanks are accepted after, for example, {i

Pre-release 3 :
 - option -stars
 - complete paths of executables in the generated Makefile
 - names of executables changed to ocamldoc and ocamldoc.opt
 - better LaTeX output
 - option -sepfiles for LaTeX
 - ocamldoc.sty used by the generated LaTeX
 - ocamldoc.hva added to use Hevea on the generated LaTeX
 - user manual updated
 - {[ ]} marks to put pre-formatted code on more than one line
 - {!Toto.tutu} to add cross references between elements
 - some bug fixes

Rep-release 2 :
- generator of texinfo files : odoc_texi.cma
- use of CSS in generated html
- new option -css-style to provide a different style sheet
- improved html
- added more precise titles in generated html pages
- no more links to unknown elements
- added indexes
- simple html : added <LINK ...> in <HEAD> : compliant
  browsers should display quick access to modules and indexes in
  their navigation bar (for example, mozilla 0.9.5 is compliant)
- '{bone}' doesn't work any more ; a space is required as in '{b one}'.
  Same for {e, {i, and some others marks. Check the manual
- bug fixes